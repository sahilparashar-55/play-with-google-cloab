# -*- coding: utf-8 -*-
"""bigquery.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MYmVcaZgG0Mybyd_25MibkLP74MSDP2b
"""

from google.colab import auth
auth.authenticate_user()
print('Authenticated')

# Commented out IPython magic to ensure Python compatibility.
# %load_ext google.colab.data_table

# Commented out IPython magic to ensure Python compatibility.
# # Display query output immediately
# 
# %%bigquery --project yourprojectid
# SELECT 
#   COUNT(*) as total_rows
# FROM `bigquery-public-data.samples.gsod`

# Commented out IPython magic to ensure Python compatibility.
# # Save output in a variable `df`
# 
# %%bigquery --project yourprojectid df
# SELECT 
#   COUNT(*) as total_rows
# FROM `bigquery-public-data.samples.gsod`

project_id = '[your project ID]'

from google.cloud import bigquery

client = bigquery.Client(project=project_id)

sample_count = 2000
row_count = client.query('''
  SELECT 
    COUNT(*) as total
  FROM `bigquery-public-data.samples.gsod`''').to_dataframe().total[0]

df = client.query('''
  SELECT
    *
  FROM
    `bigquery-public-data.samples.gsod`
  WHERE RAND() < %d/%d
''' % (sample_count, row_count)).to_dataframe()

print('Full dataset has %d rows' % row_count)

import pandas as pd

sample_count = 2000
df = pd.io.gbq.read_gbq('''
  SELECT name, SUM(number) as count
  FROM `bigquery-public-data.usa_names.usa_1910_2013`
  WHERE state = 'TX'
  GROUP BY name
  ORDER BY count DESC
  LIMIT 100
''', project_id=project_id, dialect='standard')

df.head()

from google.colab import syntax
query = syntax.sql('''
SELECT
  COUNT(*) as total_rows
FROM
  `bigquery-public-data.samples.gsod`
''')

pd.io.gbq.read_gbq(query, project_id=project_id, dialect='standard')





